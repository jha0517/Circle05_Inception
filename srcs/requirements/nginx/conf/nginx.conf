# user www-data;
# # worker_processes auto;
# pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

# events {
# 	worker_connections 1024;
# 	# worker_connections 768;
# 	# multi_accept on;
# }

# http {

# 	##
# 	# Basic Settings
# 	##

# 	# sendfile on;
# 	# tcp_nopush on;
# 	# types_hash_max_size 2048;
# 	# server_tokens off;

# 	# server_names_hash_bucket_size 64;
# 	# server_name_in_redirect off;

# 	# include /etc/nginx/mime.types;
# 	# default_type application/octet-stream;

# 	##
# 	# SERVER Settings
# 	##
# 	server {
# 		listen 443 ssl; # MAKES NGINX LISTEN ON ALL IPV4 ADDRESS ON THE SERVER. ON PORT 443 (0.0.0:443)
# 		listen [::]:443 ssl; # MAKES NGINX LISTEN ON ALL IPV6 ADDRESS ON THE SERVER, ON PORT 443(:::443)

# 		root /var/www/html/wordpress;
# 		server_name hyujung.42.fr;
# 		index index.php index.html index.htm index.nginx-debian.html;

# 	location / {
# 		include /etc/nginx/mime.types;
# 		try_files $uri $uri/ =404;
# 	}

# 	location ~ \.php$ {
# 		# THIS LINE IS USED TO SPLIT THE REQUESTED URI INTO TWO PARTS. PHP FILE NAME AND ADDTIONAL PATH INFO.
# 		fastcgi_split_path_info Ë†(.+\.php)(/.+)$;

# 		# THIS LINE SPECIFIES THE PATH TO THE PHP SCRIPT THAT SHOULD BE EXECUTED. THE $REQUEST_FILENAME VARIABLE IS SET TO THE FULL PATH OF THE REQUESTED FILE.
# 		fastcgi_param SCRIPT_FILENAME $request_filename;

# 		# THIS LINE INCLUDES A SET OF STANDARD FASTCGI PARAMETERS THAT ARE  NEEDED TO COMMUNICATE WITH THE FASTCGI PROCESS MANAGER.
# 		include fastcgi_params;

# 		# THIS LINE SPECIFIES THE ADDRESS OF THE FASTCGI PROCESS MANAGER THAT SHOULD HANDLE PHP REQUESTS. IN THIS CASE, THE ADDRESS IS WORDPRESS:9000, WHICH ASSUMES THAT THE FASTCGI PROCESS MANAGER IS RUNNING IN A CONTAINER NAMED WORDPRESS ON PORT 9000.
# 		fastcgi_pass wordpress:9000;

# 		# THIS LINE SETS THE VALUE OF THE HTTPS VARIABLE TO ON. THIS IS NEEDED BECAUSE THE REQUEST WAS MADE OVER HTTPS, AND THE FASTCGI PROCESS MANAGER NEEDS TO KNOW THIS INFORMATION IN ORDER TO GENERATE PROPER LINKS AND REDIRECTS IN THE PHP SCRIPT.
# 		fastcgi_param HTTPS on;
# 	}


# 	##
# 	# SSL Settings
# 	##

# 	# ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
# 	ssl_protocols TLSv1.2 TLSv1.3; # INCEPTION SUBJECT
# 	ssl_certificate /etc/nginx/ssl/inception.crt;
# 	ssl_certificate_key /etc/nginx/ssl/inception.key;
# 	# ssl_prefer_server_ciphers on;

# 	##
# 	# Logging Settings
# 	##

# 	access_log /var/log/nginx/access.log;
# 	error_log /var/log/nginx/error.log;

# 	##
# 	# Gzip Settings
# 	##

# 	gzip on;

# 	}
# }

user www-data;
pid /run/nginx.pid;
include etc/nginx/modules-enabled/*.conf;

events {
		worker_connections 1024;
}

http {

	server {
		listen 443 ssl;
		listen [::]:443 ssl;

		root /var/www/html/wordpress;
		server_name hyujung.42.fr;
		index index.php index.html index.htm index.nginx-debian.html;

		location / {
			include /etc/nginx/mime.types;
			try_files $uri $uri/ =404;
		}

		location ~ \.php$ {
			fastcgi_split_path_info ^(.+\.php)(/.+)$; 
			fastcgi_param SCRIPT_FILENAME $request_filename;
			include fastcgi_params;
			fastcgi_pass wordpress:9000;
			fastcgi_param HTTPS on;
		}

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_certificate /etc/nginx/ssl/inception.crt;
		ssl_certificate_key /etc/nginx/ssl/inception.key;

		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;

		gzip on;
	}
}